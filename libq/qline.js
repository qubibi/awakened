class qline{static drawlinev2(e,t,n=0,r=!0,o=2,s="#ffffff",l=null,i=[0,0],f=0){r?(e.stroke(s),e.strokeWeight(o)):e.noStroke(),e.noFill(),e.beginShape();const a=l?t.slice(l[0],l[1]+1):t,h=0!==f?Math.cos(f):null,x=0!==f?Math.sin(f):null,d=i[0]||0,c=i[1]||0;if(0===f)if(0===n)for(let t of a)e.vertex(t.x+d,t.y+c);else for(let t of a)e.vertex(t.x+d+qb.rndm(-n,n),t.y+c+qb.rndm(-n,n));else if(0===n)for(let t of a){const n=t.x,r=t.y;e.vertex(n*h-r*x+d,n*x+r*h+c)}else for(let t of a){const r=t.x+qb.rndm(-n,n),o=t.y+qb.rndm(-n,n);e.vertex(r*h-o*x+d,r*x+o*h+c)}e.endShape()}static drawline(e,t,n=0,r=!0,o=2,s="#ffffff",l=!1,i="#000000"){r?e.stroke(s):e.noStroke(),e.strokeWeight(o),l?e.fill(i):e.noFill(),e.beginShape();for(let r of t)e.vertex(r.x+qb.rndm(-n,n),r.y+qb.rndm(-n,n));e.endShape()}static drawmatuge(e,t,n=0,r=!0,o=2,s="#ffffff",l,i,f,a=0,h=1){if(!r)return void e.noStroke();e.stroke(s),e.strokeWeight(o),e.noFill();const x=i[0],d=i[1];for(let r of l){if(r>=t.length)continue;const o=t[r],s=x-o.x,l=d-o.y,i=Math.sqrt(s*s+l*l);if(0===i)continue;const c=s/i,p=l/i,m=o.x+c*f,b=o.y+p*f;if(0===a||h<=1)e.beginShape(),0===n?(e.vertex(o.x,o.y),e.vertex(m,b)):(e.vertex(o.x+qb.rndm(-n,n),o.y+qb.rndm(-n,n)),e.vertex(m+qb.rndm(-n,n),b+qb.rndm(-n,n))),e.endShape();else{const t=.5*(o.x+m)-p*(a*f*.5),r=.5*(o.y+b)+c*(a*f*.5);e.beginShape();for(let s=0;s<=h;s++){const l=s/h,i=1-l,f=i*i*o.x+2*i*l*t+l*l*m,a=i*i*o.y+2*i*l*r+l*l*b;0===n?e.vertex(f,a):e.vertex(f+qb.rndm(-n,n),a+qb.rndm(-n,n))}e.endShape()}}}static drawdot(e,t){e.fill(255,0,255),e.noStroke();for(let n of t)e.circle(n.x,n.y,7)}static drawline_interp(e,t,n,r,o,s=10,l=0,i=0){const f=t.length,a=n.length,h=Math.min(f,a);Math.max(f,a);e.push(),e.stroke(r),e.strokeWeight(o),e.noFill(),e.beginShape(LINES);for(let r=0;r<=s;r++){let o=r/s;if(0!==l){const e=Math.exp(l);o=(Math.pow(e,o)-1)/(e-1)}for(let r=0;r<h-1;r++){const s=this.mapIndex(r,h,f),l=this.mapIndex(r,h,a),x=this.mapIndex(r+1,h,f),d=this.mapIndex(r+1,h,a),c=this.lerp(t[s].x,n[l].x,o),p=this.lerp(t[s].y,n[l].y,o),m=this.lerp(t[x].x,n[d].x,o),b=this.lerp(t[x].y,n[d].y,o);e.vertex(c+qb.rndm(-i,i),p+qb.rndm(-i,i)),e.vertex(m+qb.rndm(-i,i),b+qb.rndm(-i,i))}}e.endShape(),e.pop()}static lerp(e,t,n){return e*(1-n)+t*n}static mapIndex(e,t,n){return Math.round(e/(t-1)*(n-1))}static f_vertdegreeline(e,t,n,r,o,s,l=null){e.push(),e.stroke(o),e.strokeWeight(s);const i=radians(n),f=cos(i),a=sin(i);e.beginShape(LINES);for(let n=0;n<t.length;n++){const o=t[n].x,s=t[n].y;let i=r;if(l){const[e,r]=l,o=n/(t.length-1);let s=1;o<e?s=.01+o/e*.99:o>r&&(s=.01+.99*(1-(o-r)/(1-r))),i*=s}const h=i/2,x=o-f*h,d=s-a*h,c=o+f*h,p=s+a*h;e.vertex(x,d),e.vertex(c,p)}e.endShape(),e.pop()}static drawline2(e,t,n=2,r=0,o="#ffffff",s=null,l=0,i=0,f=[0,1]){e.stroke(o),e.strokeWeight(n),e.noFill();const a=s&&"y"===s.toLowerCase(),h=l/i,[x,d]=f;e.beginShape(LINES);for(let n=-i;n<=i;n++){const o=t.map(((e,r)=>{const o=r/(t.length-1);let s;s=o<x?Math.sin(o/x*Math.PI/2):o>d?Math.cos((o-d)/(1-d)*Math.PI/2):1;const l=n*h*s;return{x:a?e.x:e.x+l,y:a?e.y+l:e.y}}));for(let t=0;t<o.length-1;t++){const n=o[t],s=o[t+1];e.vertex(n.x+qb.rndm(-r,r),n.y+qb.rndm(-r,r)),e.vertex(s.x+qb.rndm(-r,r),s.y+qb.rndm(-r,r))}}e.endShape()}}