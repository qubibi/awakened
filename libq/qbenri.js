class qb{static clamp(t,r,e){return Math.min(Math.max(t,r),e)}static colrndm(t=1){return"#"+Math.floor(16777215*hl.random()).toString(16).padStart(6,"0")+Math.round(255*t).toString(16).padStart(2,"0")}static hsv(t=0,r=1,e=1,a=1){return t=(t%360+360)%360,r=Math.max(0,Math.min(1,r)),e=Math.max(0,Math.min(1,e)),[...this.hsv2rgb(t,r,e),~~(255*a)]}static hsv2rgb(t,r,e){const a=~~(6*(t/=360)),n=6*t-a,s=e*(1-r),o=e*(1-n*r),i=e*(1-(1-n)*r);let h,c,u;switch(a%6){case 0:[h,c,u]=[e,i,s];break;case 1:[h,c,u]=[o,e,s];break;case 2:[h,c,u]=[s,e,i];break;case 3:[h,c,u]=[s,o,e];break;case 4:[h,c,u]=[i,s,e];break;case 5:[h,c,u]=[e,s,o]}return[~~(255*h),~~(255*c),~~(255*u)]}static hsvrndm(t=1,r=0,e=360,a=0,n=1,s=0,o=1){const i=r+hl.random()*(e-r),h=a+hl.random()*(n-a),c=s+hl.random()*(o-s);return[...this.hsv2rgb(i,h,c),~~(255*t)]}static rndm(t,r){return(t<r?t:r)+Math.random()*Math.abs(r-t)}static rndmint(t,r){return Math.floor((t<r?t:r)+Math.random()*Math.abs(r-t))}static rndmc(t){return 2*(Math.random()-.5)*t}static mppng(t,r,e,a,n,s=!1,o=0){if(r>e)return this.mppng(t,e,r,n,a,s,o);if(s){if(t<=r)return a;if(t>=e)return n}return o>=0?Math.pow((t-r)/(e-r),1+o)*(n-a)+a:Math.pow((t-e)/(r-e),1-o)*(a-n)+n}static mppng_cu(t,r,e,a,n,s,o,i=!1,h=.5){var c,u;return i&&(t=Math.min(Math.max(t,r),a)),t<e?(c=e-r,u=s-n):(c=a-e,u=s-o),t=Math.abs((t-e)/c),s-Math.min(Math.pow(t,1+h),1)*u}static deepCopyTwoLevels(t){const r={...t};for(let t in r)"object"==typeof r[t]&&null!==r[t]&&(r[t]={...r[t]});return r}static tweenArrays(t,r){if(t.length<2)throw new Error("少なくとも2つの配列が必要です");if(!t.every((r=>r.length===t[0].length)))throw new Error("すべての配列の長さが一致していません");const e=[];for(let a=0;a<t[0].length;a++){const n=this.tweenObjects(t.map((t=>t[a])),r);e.push(n)}return e}static tweenObjects(t,r){const e={};for(const a in t[0])"object"==typeof t[0][a]&&null!==t[0][a]?e[a]=this.tweenObjects(t.map((t=>t[a])),r):"number"==typeof t[0][a]?e[a]=this.tweenValue(t.map((t=>t[a])),r):"string"==typeof t[0][a]&&this.isHexColor(t[0][a])?e[a]=this.tweenHexColor(t.map((t=>t[a])),r):e[a]=t[0][a];return e}static tweenValue(t,r){const e=t.length-1,a=Math.min(Math.floor(r*e),e-1),n=r*e-a,s=t[a];return s+(t[a+1]-s)*n}static lerp(t,r,e,a=!1){const n=a?e<0?0:e>1?1:e:e;return"number"==typeof t?t+(r-t)*n:{x:t.x+(r.x-t.x)*n,y:t.y+(r.y-t.y)*n}}static updateObjArray(t,r,e){return t.map((t=>({...t,[r]:e})))}static updateLockedValue(t,r=0,e=.6,a=.08){return r>=t&&r>e?Math.min(r+a,1):t}static isHexColor(t){return/^#([0-9A-Fa-f]{3}){1,2}$/.test(t)}static tweenHexColor(t,r){const e=t.map(this.hexToRgb),a=this.tweenObjects(e,r);return this.rgbToHex(a)}static hexToRgb(t){t=t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,((t,r,e,a)=>r+r+e+e+a+a));const r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return r?{r:parseInt(r[1],16),g:parseInt(r[2],16),b:parseInt(r[3],16)}:null}static rgbToHex(t){return`#${((1<<24)+(t.r<<16)+(t.g<<8)+t.b).toString(16).slice(1)}`}}